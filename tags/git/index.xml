<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on XIZERO</title>
    <link>https://www.xizero.com/tags/git/index.xml</link>
    <description>Recent content in Git on XIZERO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://www.xizero.com/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Git 常用命令</title>
      <link>https://www.xizero.com/note/Git%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Fri, 18 Nov 2016 18:20:00 +0800</pubDate>
      
      <guid>https://www.xizero.com/note/Git%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>

&lt;h2 id=&#34;设置配置文件&#34;&gt;设置配置文件&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git config [--global] user.name &amp;quot;[name]&amp;quot;
git config [--global] user.email &amp;quot;[email]&amp;quot;
git config --global color.ui true
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;生成ssh-key&#34;&gt;生成SSH Key&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 检查是否存在
cd ~/.ssh
# 生成SSH Key，在id_rsa.pub中
ssh-keygen -t rsa -C &amp;quot;your_email@example.com&amp;quot;
# 测试
ssh -T git@github.com
ssh -T git@git.coding.net
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;https-方式记住密码&#34;&gt;HTTPS 方式记住密码&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git config credential.helper store
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;初始化仓库&#34;&gt;初始化仓库&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 初始化仓库
git init [project-name]
# 克隆远程仓库
git clone [project-URL]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;查看当前状态&#34;&gt;查看当前状态&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git status
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;添加到暂存区&#34;&gt;添加到暂存区&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add [-A/.]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;提交代码&#34;&gt;提交代码&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git commit -m &amp;quot;edit message&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;创建分支&#34;&gt;创建分支&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 列出所有本地分支
git branch

# 新建一个分支，但依然停留在当前分支
git branch [branch-name]
# 新建一个分支，并切换到该分支
git checkout -b [branch]

# 切换到指定分支，并更新工作区
git checkout [branch-name]

# 删除分支
git branch -d [branch-name]

# 合并指定分支到当前分支
git merge [branch]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;远程仓库&#34;&gt;远程仓库&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 增加一个新的远程仓库，并命名
git remote add [name] [url]

# 查看当前的远程仓库
git remote -v
# 需要多个远程仓库时，再添加一个新的远程仓库
git remote set-url --add [name] [url]
# 推送多个远程仓库
git push all --all
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;推送&#34;&gt;推送&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 完整命令
git push origin [localbranch]:[remotebranch]
# 忽略远程分支，代表远程分支与本地分支名相同
git push origin [localbranch]
# 忽略本地分支，代表删除远程分支
git push origin :[remotebranch]
# 忽略分支，默认本地分支与远程分支关联
git push
# 设置分支关联
git push --set-upstream origin [remotebranch]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;拉取&#34;&gt;拉取&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 从远程仓库下载分支
git fetch origin master
# 合并分支到当前分支
git merge origin/master
# 拉取远程仓库分支，与当前分支合并
git pull origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;待补充……&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>