<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Https on XIZERO</title>
    <link>http://hugo.xizero.com/tags/https/index.xml</link>
    <description>Recent content in Https on XIZERO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://hugo.xizero.com/tags/https/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Github Pages 配置 https</title>
      <link>http://hugo.xizero.com/note/Github%20Pages%20%E9%85%8D%E7%BD%AE%20https/</link>
      <pubDate>Fri, 06 Jan 2017 19:15:00 +0800</pubDate>
      
      <guid>http://hugo.xizero.com/note/Github%20Pages%20%E9%85%8D%E7%BD%AE%20https/</guid>
      <description>

&lt;h1 id=&#34;github-pages-配置-https&#34;&gt;Github Pages 配置 https&lt;/h1&gt;

&lt;p&gt;Github Pages 不支持自定义域名https，虽然使用第三方的解析代理可以实现，但是却不稳定也并不知道什么时候失效，凡事要靠自己来。&lt;/p&gt;

&lt;p&gt;搜索查找，知道使用 &lt;strong&gt;Nginx 反向代理&lt;/strong&gt; 可以实现。&lt;/p&gt;

&lt;p&gt;下面是一些简单的笔记，需要一个ubuntu环境的云服务器，其他环境自行查找。&lt;/p&gt;

&lt;h2 id=&#34;安装-nginx&#34;&gt;安装 Nginx&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;域名解析&#34;&gt;域名解析&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;删除 Github Pages 上的 CNAME ，不使用自定义域名。&lt;/li&gt;
&lt;li&gt;在域名解析商那，将自定义域名用A解析到云服务器&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;申请证书&#34;&gt;申请证书&lt;/h2&gt;

&lt;p&gt;可以搜索 Let’s Encrypt&lt;/p&gt;

&lt;h2 id=&#34;nginx-配置&#34;&gt;Nginx 配置&lt;/h2&gt;

&lt;p&gt;如果默认安装，&lt;code&gt;/etc/nginx/conf.d&lt;/code&gt; 目录是自定义配置文件的存放的地方，新建一个 &lt;code&gt;.conf&lt;/code&gt; 文件，文件名随意。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;xxx.com 表示你的自定义域名&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;添加一个虚拟主机，监听 80 ，让 http 跳转到 https&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;server {
        listen 80 ;
        server_name xxx.com;
        rewrite ^(.*)$  https://xxx.com$1 permanent;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加一个虚拟主机，监听 443 ，&lt;code&gt;location /&lt;/code&gt; 设置反向代理 Github pages，&lt;code&gt;ssl_certificate&lt;/code&gt;等设置证书，最后的 &lt;code&gt;location&lt;/code&gt; 设置缓存时间。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;添加证书的时候，注意路径，使用 &lt;code&gt;nginx -t xxx.conf&lt;/code&gt; 查看配置文件是否错误，多看看日志&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;server {
        listen 443 ssl;
        server_name xxx.com;
        ssl on;
        ssl_certificate conf.d/xxx.com_bundle.crt;
        ssl_certificate_key conf.d/xxx.com.key;
        location / {
                proxy_pass https://xxx.github.io/;
                proxy_redirect     off;
                proxy_set_header   X-Real-IP  $remote_addr;
                proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        }
        location ~ /purge(/.*){
            expires 10m;
        }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;运行-nginx&#34;&gt;运行 nginx&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;service nginx start
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://imciel.com/2016/05/09/github-pages-reverse-proxy-https/&#34;&gt;反向代理 GitHub Pages 并配置博客 HTTPS 访问&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://taozj.org/201603/blog-site-under-https.html#&#34;&gt;我的博客用上HTTPS啦&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://echo.pm/lnmp-nginx-ssl-https&#34;&gt;在 Nginx（LNMP）上配置 NameCheap SSL 证书并开启强制 HTTPS 的方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/q/1010000006614489&#34;&gt;nginx ssl强制跳转&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>