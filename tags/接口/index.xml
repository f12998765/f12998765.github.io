<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>接口 on XIZERO</title>
    <link>http://127.0.0.1/tags/%E6%8E%A5%E5%8F%A3/index.xml</link>
    <description>Recent content in 接口 on XIZERO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://127.0.0.1/tags/%E6%8E%A5%E5%8F%A3/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Java 接口 抽象类 多态</title>
      <link>http://127.0.0.1/java/java-%E6%8E%A5%E5%8F%A3-%E6%8A%BD%E8%B1%A1%E7%B1%BB-%E5%A4%9A%E6%80%81/</link>
      <pubDate>Fri, 18 Nov 2016 18:20:00 +0800</pubDate>
      
      <guid>http://127.0.0.1/java/java-%E6%8E%A5%E5%8F%A3-%E6%8A%BD%E8%B1%A1%E7%B1%BB-%E5%A4%9A%E6%80%81/</guid>
      <description>

&lt;h2 id=&#34;什么是接口&#34;&gt;什么是接口？&lt;/h2&gt;

&lt;p&gt;接口是一种服务提供者与服务使用者之间的协议。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;接口的定义&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;访问修饰符 interface  接口名 extends  父接口列表{

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;接口的实现&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;访问修饰符 class 类名 extends 父类 implements  接口列表{

}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;接口中的成员&#34;&gt;接口中的成员&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;字段&lt;/strong&gt;
* 必须初始化
* 默认：&lt;code&gt;public&lt;/code&gt; &lt;code&gt;static&lt;/code&gt; &lt;code&gt;final&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;抽象方法&lt;/strong&gt;
* 默认为： &lt;code&gt;public abstract&lt;/code&gt;
* 没有主体，由分号结束&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;静态方法和默认方法&lt;/strong&gt;
* Java 8 支持在接口中定义静态方法和默认方法&lt;/p&gt;

&lt;h1 id=&#34;抽象类&#34;&gt;抽象类&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;抽象类和抽象方法有 &lt;code&gt;abstract&lt;/code&gt; 修饰符修饰。&lt;/li&gt;
&lt;li&gt;包含抽象方法的类必须定义为抽象类。&lt;/li&gt;
&lt;li&gt;抽象类不能被实例化，抽象方法必须在子类中被实现。&lt;/li&gt;
&lt;li&gt;只有通过子类继承抽象类并覆盖了抽象类中的&lt;strong&gt;所有&lt;/strong&gt;抽象方法后，该子类才可以实例化。否则，该子类还是一个抽象类。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;什么时候使用抽象类和接口&#34;&gt;什么时候使用抽象类和接口？&lt;/h1&gt;

&lt;p&gt;接口：
* 实现多重继承&lt;/p&gt;

&lt;p&gt;抽象类：
* 成员方法需要默认实现
* 基本方法不断改变&lt;/p&gt;

&lt;h1 id=&#34;多态&#34;&gt;多态&lt;/h1&gt;

&lt;p&gt;多态是同一个行为具有多个不同表现形式或形态的能力。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;父类引用指向子类对象，调用重写的方法&lt;/strong&gt;
&lt;strong&gt;接口引用指向实现类对象，调用实现的方法&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;条件&#34;&gt;条件&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;继承超类或实现接口&lt;/li&gt;
&lt;li&gt;方法的重写&lt;/li&gt;
&lt;li&gt;父类引用指向子类对象或接口引用指向实现类对象&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>