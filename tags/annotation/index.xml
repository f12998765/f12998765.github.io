<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Annotation on XIZERO</title>
    <link>http://xizero.com/tags/annotation/index.xml</link>
    <description>Recent content in Annotation on XIZERO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://xizero.com/tags/annotation/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Java 注解</title>
      <link>http://xizero.com/java/java-%E6%B3%A8%E8%A7%A3/</link>
      <pubDate>Fri, 18 Nov 2016 18:20:00 +0800</pubDate>
      
      <guid>http://xizero.com/java/java-%E6%B3%A8%E8%A7%A3/</guid>
      <description>

&lt;h1 id=&#34;annotation-注解&#34;&gt;Annotation（注解）&lt;/h1&gt;

&lt;p&gt;Java提供的一种元程序中的元素关联任何信息和任何元数据（metadata）的途径和方法。
Annotion(注解)是一个接口，程序可以通过反射来获取指定程序元素的Annotion对象，然后通过Annotion对象来获取注解里面的元数据。
它可以用于创建文档，跟踪代码中的依赖性，甚至执行基本编译时检查。从某些方面看，annotation就像修饰符一样被使用，并应用于包、类 型、构造方法、方法、成员变量、参数、本地变量的声明中。这些信息被存储在Annotation的“name=value”结构对中。&lt;/p&gt;

&lt;p&gt;当一个接口直接继承java.lang.annotation.Annotation接口时，仍是接口，而并非注解。要想自定义注解类型，只能通过@interface关键字的方式，其实通过该方式会隐含地继承.Annotation接口。&lt;/p&gt;

&lt;h1 id=&#34;注解和注解类型&#34;&gt;注解和注解类型&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;注解类型是一种特殊的接口类型，注解是注解类型的一个实例&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;注解类型&#34;&gt;注解类型&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;根据注解使用方法和用途：
    1.JDK内置系统注解
    2.元注解
    3.自定义注解&lt;/li&gt;
&lt;li&gt;根据注解键值对的个数：
    1.标记注解
    2.单值注解
    3.多值注解　　
如果注解类型有单个键值对 , 并且键的名称是 value , 那么可以忽略括号中的键&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;元注解&#34;&gt;元注解&lt;/h1&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;注解&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;@Target&lt;/td&gt;
&lt;td&gt;用于描述注解的使用对象&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;@Retention&lt;/td&gt;
&lt;td&gt;表示注解类型的存活时长&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;@Documented&lt;/td&gt;
&lt;td&gt;表示含有该注解类型的元素(带有注释的)会通过javadoc或类似工具进行文档化&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;@Inherited&lt;/td&gt;
&lt;td&gt;表示注解类型能被自动继承&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;位于  java.lang.annotation 下&lt;/p&gt;

&lt;h2 id=&#34;targe&#34;&gt;@Targe&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;用于描述注解的使用对象&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;value取值为java.lang.annnotation.RetentionPolicy 枚举的成员之一&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ElementType&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ANNOTATION_TYPE&lt;/td&gt;
&lt;td&gt;注解类型声明&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;CONSTRUCTOR&lt;/td&gt;
&lt;td&gt;构造方法声明&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;FIELD&lt;/td&gt;
&lt;td&gt;字段声明（包括枚举常量）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;LOCAL_VARIABLE&lt;/td&gt;
&lt;td&gt;局部变量声明&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;METHOD&lt;/td&gt;
&lt;td&gt;方法声明&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;PACKAGE&lt;/td&gt;
&lt;td&gt;包声明&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;PARAMETER&lt;/td&gt;
&lt;td&gt;参数声明&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;TYPE&lt;/td&gt;
&lt;td&gt;类、接口（包括注解类型）或枚举声明&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;默认策略 , 可作用于任意对象&lt;/p&gt;

&lt;h2 id=&#34;retention&#34;&gt;@Retention&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;定义了该Annotation被保留的时间长短&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;value取值为java.lang.annnotation.ElementType 枚举的成员之一&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;RetentionPolicy&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;SOURCE&lt;/td&gt;
&lt;td&gt;源文件有效&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;CLASS&lt;/td&gt;
&lt;td&gt;Class字节码文件有效&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;RUNTIME&lt;/td&gt;
&lt;td&gt;运行时有效 , 可通过反射性地读取注解&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;默认保留策略为RetentionPolicy.CLASS&lt;/p&gt;

&lt;h2 id=&#34;documented&#34;&gt;@Documented&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;当前注解的元素会被javadoc工具进行文档化&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;inherited&#34;&gt;@Inherited&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;表示该注解类型被自动继承&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;系统内置标准注解&#34;&gt;系统内置标准注解：&lt;/h1&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;内建注解&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;th&gt;Target&lt;/th&gt;
&lt;th&gt;Retention&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Override&lt;/td&gt;
&lt;td&gt;标记注解&lt;/td&gt;
&lt;td&gt;修饰此方法覆盖了父类的方法&lt;/td&gt;
&lt;td&gt;METHOD&lt;/td&gt;
&lt;td&gt;SOURCE&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;SuppressWarnings&lt;/td&gt;
&lt;td&gt;标记注解&lt;/td&gt;
&lt;td&gt;修饰已经过时的方法&lt;/td&gt;
&lt;td&gt;除ANNOTATION_TYPE和PACKAGE外的所有&lt;/td&gt;
&lt;td&gt;SOURCE&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Deprecated&lt;/td&gt;
&lt;td&gt;单值注解&lt;/td&gt;
&lt;td&gt;压制提醒 , 抑制编译器警告&lt;/td&gt;
&lt;td&gt;除ANNOTATION_TYPE外的所有&lt;/td&gt;
&lt;td&gt;RUNTIME&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;override&#34;&gt;@Override&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;告诉编译器该方法覆盖了超类/父类中的一个方法&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;deprecated&#34;&gt;@Deprecated&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;应用于方法或类型 , 表示该方法或类型是要废弃的&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;通常是因为有更好的方法或类型 , 并且兼容低版本&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;suppresswarnnings&#34;&gt;@SuppressWarnnings&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;抑制编译器警告&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;suppresswarnings-value-注解的常见参数值的简单说明&#34;&gt;@SuppressWarnings(value={})注解的常见参数值的简单说明：&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;deprecation&lt;/td&gt;
&lt;td&gt;使用了不赞成使用的类或方法时的警告&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;unchecked&lt;/td&gt;
&lt;td&gt;执行了未检查的转换时的警告，例如当使用集合时没有用泛型 (Generics) 来指定集合保存的类型&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;fallthrough&lt;/td&gt;
&lt;td&gt;当 switch 程序块 case 直接通往下一种情况而没有 break 时的警告&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;在类路径、源文件路径等中有不存在的路径时的警告&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;serial&lt;/td&gt;
&lt;td&gt;当在可序列化的类上缺少 serialVersionUID 定义时的警告&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;finally&lt;/td&gt;
&lt;td&gt;任何 finally 子句不能正常完成时的警告&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;all&lt;/td&gt;
&lt;td&gt;关于以上所有情况的警告&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&#34;自定义注解&#34;&gt;自定义注解&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;一个注解类型是一个java接口&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@Inherited
@Retention
@Documented
@Target(value=ANNOTATION_TYPE)
public @interface CustomAnnotation ( ) {

}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;使用反射来查询注解&#34;&gt;使用反射来查询注解&lt;/h1&gt;

&lt;p&gt;java.lang.Class&lt;/p&gt;

&lt;h2 id=&#34;如果存在-返回指定注解类型的注解-不存在则返回null&#34;&gt;如果存在，返回指定注解类型的注解；不存在则返回null&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public &amp;lt;A extends java.lang.annotation.Annotation&amp;gt; A  getAnnotation ( Class&amp;lt;A&amp;gt; annotationClass )
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;返回该类中所有注解&#34;&gt;返回该类中所有注解&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public java.lang.annotation.Annotation[] getAnnotations ( )
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;判断该类是不是一个注解类型&#34;&gt;判断该类是不是一个注解类型&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public boolean isAnnotation()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;判断指定类型的一个注解是否出现在该类上&#34;&gt;判断指定类型的一个注解是否出现在该类上&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public boolean isAnnotationPressent( Class&amp;lt;? extends java.lang.annotation.Annotation&amp;gt; annotationClass)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/cwcwj3069/article/details/52252670&#34;&gt;《深入理解Java：注解》 cwcwj3069 - CSDN博客 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/kgrdomore/p/5806321.html&#34;&gt;《注解的基本盘点》 墨迹修 - 博客园博客 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gityuan.com/2016/01/23/java-annotation/&#34;&gt;《Java注解(Annotation)》 Gityuan - 个人博客 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/tianzhijiexian/p/4807813.html&#34;&gt;《Java 注解》 Developer_Kale - 博客园博客  &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《Java 和 Android 开发学习指南》 （第2版）， [加] Budi Kurniawan 著 ，李强 译  ，人民邮电出版社 2016-3&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>